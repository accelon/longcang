/* 產生 永樂北藏換行 */
/* 轉換經號 */

import {meta_cbeta,fromChineseNumber,nodefs, writeChanged, readTextContent, readTextLines, splitUTF32Char,  isPunc} from 'ptk/nodebundle.cjs'
await nodefs;

//generated by dharmacloud/jinglu/gen-sutra-map.js
const taisho_longcang=JSON.parse(readTextContent('sutramap-2-59.json'));
const longcang_taisho=JSON.parse(readTextContent('sutramap-59-2.json'));

const wanted={
    '0538':'',
    '0539':'',
    '0540':'',
    '0541':'',
}


const srcfn='agama.xml';//taisho-longcang.xml' ; //取自 道中法師 龍藏頁碼

const splitPage=page=>{
    if (!page) return [];
    const out=[];
    let i=0,line='',chicount=0;
    const chars=splitUTF32Char(page);
    while (i<chars.length) {
        if (chars[i]!=='§') line+=chars[i];
        if (chars[i]=='[') {
            while (chars[i]!==']' && i<chars.length) i++;//skip missing character
        }
        if (!isPunc(chars[i]) && chars[i].charCodeAt(0)>=0x3400 ) {
            chicount++;
        }

        const forcebreak=(chars[i]=='§');
        if (forcebreak || chicount>=17) {
            out.push(line);
            chicount=0;
            line='';
        }
        i++;
    }
    if (line) out.push(line);

    const lines=out.join('\n').replace(/\n。/g,'。\n').replace(/\n．/g,'．\n').replace(/\n+/g,'\n').split('\n')
    //const should be 15
    if (lines[0]) lines[0]='^pb '+lines[0];
    if(lines[5])lines[5]='^pb '+lines[5];
    if(lines[10]) lines[10]='^pb '+lines[10];
    return lines;
}
/*
取得大正經號，轉為北藏號
*/
let writefn='',emit=false;

const emitfile=(lines)=>{
    writeChanged(writefn,lines.join('\n'),true);
}
const doLines=lines=>{
    let page='', prevno,prevjuan;
    let juantext=[],out=[];
    for (let i=0;i<lines.length;i++) {
        let line=lines[i];
        if (line.charAt(0)!=='T') continue;
        
        if (~line.indexOf('【L')||~line.indexOf('【CL')) { // 龍藏卷首標記
            const vnp0=meta_cbeta.parseVolNoPage(line);
            if (!vnp0) {
                console.log(line)
            }
            const vnp=meta_cbeta.nextColumn(vnp0);
            const [normalizeno,juan]=meta_cbeta.TaishoJuanFromPage( vnp.vol,vnp.page,vnp.col);

            line=line.replace(/【C?L[\da-z_]+】/,'\n');
            if (prevjuan!==juan || vnp.no!==prevno) {
                if (prevno!==vnp.no) {
                    if (emit) {
                        emitfile(out);
                        out.length=0;
                    }
                    emit=wanted.hasOwnProperty( taisho_longcang[vnp.no]);
                    writefn=emit?'ql'+parseInt(taisho_longcang[vnp.no])+'.off':'';
                    if (emit) out.push('^no '+vnp.no);
                }
                if (prevno && prevjuan) {
                    if (emit) out.push('^juan'+prevjuan);
                    if (emit) out.push(juantext.join('\n'));
                    juantext=[]; 
                }
            }

            
            prevno=vnp.no;
            prevjuan=juan;
        }
        
        if (emit) {
            let text=line.slice(18);
            if (text.startsWith('　') || text.startsWith('（') ) text='§'+text;
            if (text.lastIndexOf('　　')>2) text+='§'; //gatha
            else if (~text.indexOf('【□】')) text+='§';

            text=text.replace(/（([一二三四五六七八九十○]+)）/,(m,m1)=>{
                return '^n'+fromChineseNumber(m1);
            })
            const at=text.indexOf('【●】');
            if (~at) {
                page+=text.slice(0,at);
                juantext.push( ... splitPage(page));
                page=text.slice(text.lastIndexOf('【●】')+3);
            } else {
                page+=text;
            }            
        }
    }
    //注意最後一經不會輸出
}

const lines=readTextLines(srcfn);
doLines(lines);
